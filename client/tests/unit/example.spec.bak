// import { shallowMount, createLocalVue } from '@vue/test-utils'
// import Vuetify from 'vuetify';
// import Vuex from 'vuex';
// import App from './../../src/App.vue'
// import Home from './../../src/components/Home.vue'

// describe('App', () => {
//   // Inspect the raw component options
//   it('has data', () => {
//     expect(typeof App.data).toBe('function')
//   })
// })

// describe('Home', () => {
//   // Inspect the raw component options
//   it('has data', () => {
//     expect(typeof Home.data).toBe('function')
//   })
// })

// //Home Page
//   //1. Navigation exist
//   //2. Content exist 
  
//   //Events
//   //1. Event table exist
//   //2. Search button in event table is working
//   //3. When apply link clicked, form should be displayed

//   //Member
//   //1. Should have this component:
//       //Event List Table exist
//       //Volunteer List Table exist
//       //Create Event Tab is working
//       //Form filled & submit, display success or no error
//       //If required field is empty upon submit, error will be displayed

// let wrapper;
// let store;
// let actions;
// let mutations;
// let state;
// // const localVue = createLocalVue();
// // localVue.use(Vuex);
// const localVue = createLocalVue();
// localVue.use(Vuetify, {});

// beforeEach(() => {
//   actions = {
//       someAction: jest.fn()
//   };
//   mutations = {
//       someMutation: jest.fn()
//   };
//   state = {
//       key: {}
//   };
//   store = new Vuex.Store({
//       actions,
//       mutations,
//       state,
//   });
//   wrapper = shallowMount(App, {
//       propsData: {},
//       mocks: {},
//       stubs: {},
//       methods: {},
//       store,
//       localVue,    
//   });
// });

// afterEach(() => {
//   wrapper.destroy();
// });

// describe('App', () => {
//   test('is a Vue instance', () => {
//       expect(wrapper.isVueInstance).toBeTruthy();
//   });
// });

// describe('Home', () => {
//   test('is a Vue instance', () => {
//       expect(wrapper.isVueInstance).toBeTruthy();
//   });
// });

// test('has shrink class', () => {
//   expect(wrapper.contains('.shrink')).toBe(true);
// });

// // check multiple elements by verifying count
// test('has shrink classes', () => {
//   expect(wrapper.findAll('.shrink').length).toBe(1);
// });